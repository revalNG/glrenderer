uniform vec3 fvLightPosition;
uniform vec3 fvEyePosition;

varying vec2 Texcoord;
varying vec3 ViewDirection;
varying vec3 LightDirection;
varying vec3 Normal;
   
void main( void )
{
   gl_Position = ftransform();
   Texcoord    = gl_MultiTexCoord0.xy;
    
   vec4 fvObjectPosition = gl_ModelViewMatrix * gl_Vertex;
   vec4 fvEyePosition4f;
   fvEyePosition4f.xyz = fvEyePosition.xyz;
   fvEyePosition4f.w = 1.0;
   vec4 fvLightPosition4f;
   fvLightPosition4f.xyz = fvLightPosition.xyz;
   fvLightPosition4f.w = 1.0;
   vec4 EyePosition = gl_ModelViewMatrix * fvEyePosition4f;
   vec4 LightPosition = gl_ModelViewMatrix * fvLightPosition4f;
   
   ViewDirection  = EyePosition.xyz - fvObjectPosition.xyz;
   LightDirection = LightPosition.xyz - fvObjectPosition.xyz;
   Normal.xyz         = (gl_ModelViewMatrix * vec4(gl_Normal, 0)).xyz;
   
}